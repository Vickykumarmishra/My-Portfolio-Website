{"ast":null,"code":"import { clear, colorToHsl, colorToRgb, deepExtend, drawConnectLine, drawGrabLine, drawParticle, drawParticlePlugin, drawPlugin, getStyleFromHsl, getStyleFromRgb, gradient, paintBase } from \"../Utils\";\nimport { Constants } from \"./Utils\";\nexport class Canvas {\n  constructor(container) {\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n  init() {\n    this.resize();\n    this.initStyle();\n    this.initCover();\n    this.initTrail();\n    this.initBackground();\n    this.paint();\n  }\n  loadCanvas(canvas) {\n    var _a;\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    this.generatedCanvas = canvas.dataset && Constants.generatedAttribute in canvas.dataset ? canvas.dataset[Constants.generatedAttribute] === \"true\" : this.generatedCanvas;\n    this.element = canvas;\n    this.originalStyle = deepExtend({}, this.element.style);\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n    this.context = this.element.getContext(\"2d\");\n    this.container.retina.init();\n    this.initBackground();\n  }\n  destroy() {\n    var _a;\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    this.draw(ctx => {\n      clear(ctx, this.size);\n    });\n  }\n  paint() {\n    const options = this.container.actualOptions;\n    this.draw(ctx => {\n      if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n        clear(ctx, this.size);\n        this.paintBase(getStyleFromRgb(this.coverColor, this.coverColor.a));\n      } else {\n        this.paintBase();\n      }\n    });\n  }\n  clear() {\n    const options = this.container.actualOptions;\n    const trail = options.particles.move.trail;\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n    } else {\n      this.draw(ctx => {\n        clear(ctx, this.size);\n      });\n    }\n  }\n  async windowResize() {\n    if (!this.element) {\n      return;\n    }\n    const container = this.container;\n    this.resize();\n    const needsRefresh = container.updateActualOptions();\n    container.particles.setDensity();\n    for (const [, plugin] of container.plugins) {\n      if (plugin.resize !== undefined) {\n        plugin.resize();\n      }\n    }\n    if (needsRefresh) {\n      await container.refresh();\n    }\n  }\n  resize() {\n    if (!this.element) {\n      return;\n    }\n    const container = this.container;\n    const pxRatio = container.retina.pixelRatio;\n    const size = container.canvas.size;\n    const oldSize = {\n      width: size.width,\n      height: size.height\n    };\n    size.width = this.element.offsetWidth * pxRatio;\n    size.height = this.element.offsetHeight * pxRatio;\n    this.element.width = size.width;\n    this.element.height = size.height;\n    if (this.container.started) {\n      this.resizeFactor = {\n        width: size.width / oldSize.width,\n        height: size.height / oldSize.height\n      };\n    }\n  }\n  drawConnectLine(p1, p2) {\n    this.draw(ctx => {\n      var _a;\n      const lineStyle = this.lineStyle(p1, p2);\n      if (!lineStyle) {\n        return;\n      }\n      const pos1 = p1.getPosition();\n      const pos2 = p2.getPosition();\n      drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n    });\n  }\n  drawGrabLine(particle, lineColor, opacity, mousePos) {\n    const container = this.container;\n    this.draw(ctx => {\n      var _a;\n      const beginPos = particle.getPosition();\n      drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n    });\n  }\n  drawParticle(particle, delta) {\n    var _a, _b, _c, _d, _e, _f;\n    if (particle.spawning || particle.destroyed) {\n      return;\n    }\n    const pfColor = particle.getFillColor();\n    const psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n    if (!pfColor && !psColor) {\n      return;\n    }\n    let [fColor, sColor] = this.getPluginParticleColors(particle);\n    const pOptions = particle.options;\n    const twinkle = pOptions.twinkle.particles;\n    const twinkling = twinkle.enable && Math.random() < twinkle.frequency;\n    if (!fColor || !sColor) {\n      const twinkleRgb = colorToHsl(twinkle.color);\n      if (!fColor) {\n        fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : pfColor ? pfColor : undefined;\n      }\n      if (!sColor) {\n        sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : psColor ? psColor : undefined;\n      }\n    }\n    const options = this.container.actualOptions;\n    const zIndexOptions = particle.options.zIndex;\n    const zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate;\n    const radius = particle.getRadius();\n    const opacity = twinkling ? twinkle.opacity : (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1;\n    const strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity;\n    const zOpacity = opacity * zOpacityFactor;\n    const fillColorValue = fColor ? getStyleFromHsl(fColor, zOpacity) : undefined;\n    if (!fillColorValue && !sColor) {\n      return;\n    }\n    this.draw(ctx => {\n      const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate;\n      const zStrokeOpacity = strokeOpacity * zOpacityFactor;\n      const strokeColorValue = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : fillColorValue;\n      if (radius <= 0) {\n        return;\n      }\n      const container = this.container;\n      for (const updater of container.particles.updaters) {\n        if (updater.beforeDraw) {\n          updater.beforeDraw(particle);\n        }\n      }\n      drawParticle(this.container, ctx, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow, particle.gradient);\n      for (const updater of container.particles.updaters) {\n        if (updater.afterDraw) {\n          updater.afterDraw(particle);\n        }\n      }\n    });\n  }\n  drawPlugin(plugin, delta) {\n    this.draw(ctx => {\n      drawPlugin(ctx, plugin, delta);\n    });\n  }\n  drawParticlePlugin(plugin, particle, delta) {\n    this.draw(ctx => {\n      drawParticlePlugin(ctx, plugin, particle, delta);\n    });\n  }\n  initBackground() {\n    const options = this.container.actualOptions;\n    const background = options.background;\n    const element = this.element;\n    const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n    if (!elementStyle) {\n      return;\n    }\n    if (background.color) {\n      const color = colorToRgb(background.color);\n      elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n    } else {\n      elementStyle.backgroundColor = \"\";\n    }\n    elementStyle.backgroundImage = background.image || \"\";\n    elementStyle.backgroundPosition = background.position || \"\";\n    elementStyle.backgroundRepeat = background.repeat || \"\";\n    elementStyle.backgroundSize = background.size || \"\";\n  }\n  draw(cb) {\n    if (!this.context) {\n      return;\n    }\n    return cb(this.context);\n  }\n  initCover() {\n    const options = this.container.actualOptions;\n    const cover = options.backgroundMask.cover;\n    const color = cover.color;\n    const coverRgb = colorToRgb(color);\n    if (coverRgb) {\n      this.coverColor = {\n        r: coverRgb.r,\n        g: coverRgb.g,\n        b: coverRgb.b,\n        a: cover.opacity\n      };\n    }\n  }\n  initTrail() {\n    const options = this.container.actualOptions;\n    const trail = options.particles.move.trail;\n    const fillColor = colorToRgb(trail.fillColor);\n    if (fillColor) {\n      const trail = options.particles.move.trail;\n      this.trailFillColor = {\n        r: fillColor.r,\n        g: fillColor.g,\n        b: fillColor.b,\n        a: 1 / trail.length\n      };\n    }\n  }\n  getPluginParticleColors(particle) {\n    let fColor;\n    let sColor;\n    for (const [, plugin] of this.container.plugins) {\n      if (!fColor && plugin.particleFillColor) {\n        fColor = colorToHsl(plugin.particleFillColor(particle));\n      }\n      if (!sColor && plugin.particleStrokeColor) {\n        sColor = colorToHsl(plugin.particleStrokeColor(particle));\n      }\n      if (fColor && sColor) {\n        break;\n      }\n    }\n    return [fColor, sColor];\n  }\n  initStyle() {\n    const element = this.element,\n      options = this.container.actualOptions;\n    if (!element) {\n      return;\n    }\n    const originalStyle = this.originalStyle;\n    if (options.fullScreen.enable) {\n      this.originalStyle = deepExtend({}, element.style);\n      element.style.setProperty(\"position\", \"fixed\", \"important\");\n      element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n      element.style.setProperty(\"top\", \"0\", \"important\");\n      element.style.setProperty(\"left\", \"0\", \"important\");\n      element.style.setProperty(\"width\", \"100%\", \"important\");\n      element.style.setProperty(\"height\", \"100%\", \"important\");\n    } else if (originalStyle) {\n      element.style.position = originalStyle.position;\n      element.style.zIndex = originalStyle.zIndex;\n      element.style.top = originalStyle.top;\n      element.style.left = originalStyle.left;\n      element.style.width = originalStyle.width;\n      element.style.height = originalStyle.height;\n    }\n    for (const key in options.style) {\n      if (!key || !options.style) {\n        continue;\n      }\n      const value = options.style[key];\n      if (!value) {\n        continue;\n      }\n      element.style.setProperty(key, value, \"important\");\n    }\n  }\n  paintBase(baseColor) {\n    this.draw(ctx => {\n      paintBase(ctx, this.size, baseColor);\n    });\n  }\n  lineStyle(p1, p2) {\n    return this.draw(ctx => {\n      const options = this.container.actualOptions;\n      const connectOptions = options.interactivity.modes.connect;\n      return gradient(ctx, p1, p2, connectOptions.links.opacity);\n    });\n  }\n}","map":{"version":3,"names":["clear","colorToHsl","colorToRgb","deepExtend","drawConnectLine","drawGrabLine","drawParticle","drawParticlePlugin","drawPlugin","getStyleFromHsl","getStyleFromRgb","gradient","paintBase","Constants","Canvas","constructor","container","size","height","width","context","generatedCanvas","init","resize","initStyle","initCover","initTrail","initBackground","paint","loadCanvas","canvas","_a","element","remove","dataset","generatedAttribute","originalStyle","style","offsetHeight","offsetWidth","getContext","retina","destroy","draw","ctx","options","actualOptions","backgroundMask","enable","cover","coverColor","a","trail","particles","move","length","trailFillColor","windowResize","needsRefresh","updateActualOptions","setDensity","plugin","plugins","undefined","refresh","pxRatio","pixelRatio","oldSize","started","resizeFactor","p1","p2","lineStyle","pos1","getPosition","pos2","linksWidth","particle","lineColor","opacity","mousePos","beginPos","delta","_b","_c","_d","_e","_f","spawning","destroyed","pfColor","getFillColor","psColor","getStrokeColor","fColor","sColor","getPluginParticleColors","pOptions","twinkle","twinkling","Math","random","frequency","twinkleRgb","color","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","radius","getRadius","bubble","value","strokeOpacity","stroke","zOpacity","fillColorValue","zSizeFactor","sizeRate","zStrokeOpacity","strokeColorValue","updater","updaters","beforeDraw","composite","shadow","afterDraw","background","elementStyle","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","cb","coverRgb","r","g","b","fillColor","particleFillColor","particleStrokeColor","fullScreen","setProperty","toString","top","left","key","baseColor","connectOptions","interactivity","modes","connect","links"],"sources":["C:/Users/VICKY MISHRA/Desktop/My-Portfolio-Website/My-portfolio-website-using-React-js/myportfolio/node_modules/tsparticles/esm/Core/Canvas.js"],"sourcesContent":["import { clear, colorToHsl, colorToRgb, deepExtend, drawConnectLine, drawGrabLine, drawParticle, drawParticlePlugin, drawPlugin, getStyleFromHsl, getStyleFromRgb, gradient, paintBase, } from \"../Utils\";\nimport { Constants } from \"./Utils\";\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas) {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas =\n            canvas.dataset && Constants.generatedAttribute in canvas.dataset\n                ? canvas.dataset[Constants.generatedAttribute] === \"true\"\n                : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n                clear(ctx, this.size);\n                this.paintBase(getStyleFromRgb(this.coverColor, this.coverColor.a));\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    clear() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        this.resize();\n        const needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container;\n        const pxRatio = container.retina.pixelRatio;\n        const size = container.canvas.size;\n        const oldSize = {\n            width: size.width,\n            height: size.height,\n        };\n        size.width = this.element.offsetWidth * pxRatio;\n        size.height = this.element.offsetHeight * pxRatio;\n        this.element.width = size.width;\n        this.element.height = size.height;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawConnectLine(p1, p2) {\n        this.draw((ctx) => {\n            var _a;\n            const lineStyle = this.lineStyle(p1, p2);\n            if (!lineStyle) {\n                return;\n            }\n            const pos1 = p1.getPosition();\n            const pos2 = p2.getPosition();\n            drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n        });\n    }\n    drawGrabLine(particle, lineColor, opacity, mousePos) {\n        const container = this.container;\n        this.draw((ctx) => {\n            var _a;\n            const beginPos = particle.getPosition();\n            drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n        });\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d, _e, _f;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const pfColor = particle.getFillColor();\n        const psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        const pOptions = particle.options;\n        const twinkle = pOptions.twinkle.particles;\n        const twinkling = twinkle.enable && Math.random() < twinkle.frequency;\n        if (!fColor || !sColor) {\n            const twinkleRgb = colorToHsl(twinkle.color);\n            if (!fColor) {\n                fColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = twinkling && twinkleRgb !== undefined ? twinkleRgb : psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions;\n        const zIndexOptions = particle.options.zIndex;\n        const zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate;\n        const radius = particle.getRadius();\n        const opacity = twinkling ? twinkle.opacity : (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1;\n        const strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity;\n        const zOpacity = opacity * zOpacityFactor;\n        const fillColorValue = fColor ? getStyleFromHsl(fColor, zOpacity) : undefined;\n        if (!fillColorValue && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate;\n            const zStrokeOpacity = strokeOpacity * zOpacityFactor;\n            const strokeColorValue = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : fillColorValue;\n            if (radius <= 0) {\n                return;\n            }\n            const container = this.container;\n            for (const updater of container.particles.updaters) {\n                if (updater.beforeDraw) {\n                    updater.beforeDraw(particle);\n                }\n            }\n            drawParticle(this.container, ctx, particle, delta, fillColorValue, strokeColorValue, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow, particle.gradient);\n            for (const updater of container.particles.updaters) {\n                if (updater.afterDraw) {\n                    updater.afterDraw(particle);\n                }\n            }\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    initBackground() {\n        const options = this.container.actualOptions;\n        const background = options.background;\n        const element = this.element;\n        const elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = colorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    draw(cb) {\n        if (!this.context) {\n            return;\n        }\n        return cb(this.context);\n    }\n    initCover() {\n        const options = this.container.actualOptions;\n        const cover = options.backgroundMask.cover;\n        const color = cover.color;\n        const coverRgb = colorToRgb(color);\n        if (coverRgb) {\n            this.coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions;\n        const trail = options.particles.move.trail;\n        const fillColor = colorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor;\n        let sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = colorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = colorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        const originalStyle = this.originalStyle;\n        if (options.fullScreen.enable) {\n            this.originalStyle = deepExtend({}, element.style);\n            element.style.setProperty(\"position\", \"fixed\", \"important\");\n            element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n            element.style.setProperty(\"top\", \"0\", \"important\");\n            element.style.setProperty(\"left\", \"0\", \"important\");\n            element.style.setProperty(\"width\", \"100%\", \"important\");\n            element.style.setProperty(\"height\", \"100%\", \"important\");\n        }\n        else if (originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    lineStyle(p1, p2) {\n        return this.draw((ctx) => {\n            const options = this.container.actualOptions;\n            const connectOptions = options.interactivity.modes.connect;\n            return gradient(ctx, p1, p2, connectOptions.links.opacity);\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from \"C:/Users/VICKY MISHRA/Desktop/My-Portfolio-Website/My-portfolio-website-using-React-js/myportfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/VICKY MISHRA/Desktop/My-Portfolio-Website/My-portfolio-website-using-React-js/myportfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nexport var Vector = /*#__PURE__*/function () {\n  function Vector(x, y) {\n    _classCallCheck(this, Vector);\n    var defX, defY;\n    if (y === undefined) {\n      if (typeof x === \"number\") {\n        throw new Error(\"tsParticles - Vector not initialized correctly\");\n      }\n      var coords = x;\n      var _ref = [coords.x, coords.y];\n      defX = _ref[0];\n      defY = _ref[1];\n    } else {\n      defX = x;\n      defY = y;\n    }\n    this.x = defX;\n    this.y = defY;\n  }\n  _createClass(Vector, [{\n    key: \"angle\",\n    get: function get() {\n      return Math.atan2(this.y, this.x);\n    },\n    set: function set(angle) {\n      this.updateFromAngle(angle, this.length);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n    },\n    set: function set(length) {\n      this.updateFromAngle(this.angle, length);\n    }\n  }, {\n    key: \"add\",\n    value: function add(v) {\n      return Vector.create(this.x + v.x, this.y + v.y);\n    }\n  }, {\n    key: \"addTo\",\n    value: function addTo(v) {\n      this.x += v.x;\n      this.y += v.y;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(v) {\n      return Vector.create(this.x - v.x, this.y - v.y);\n    }\n  }, {\n    key: \"subFrom\",\n    value: function subFrom(v) {\n      this.x -= v.x;\n      this.y -= v.y;\n    }\n  }, {\n    key: \"mult\",\n    value: function mult(n) {\n      return Vector.create(this.x * n, this.y * n);\n    }\n  }, {\n    key: \"multTo\",\n    value: function multTo(n) {\n      this.x *= n;\n      this.y *= n;\n    }\n  }, {\n    key: \"div\",\n    value: function div(n) {\n      return Vector.create(this.x / n, this.y / n);\n    }\n  }, {\n    key: \"divTo\",\n    value: function divTo(n) {\n      this.x /= n;\n      this.y /= n;\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(v) {\n      return this.sub(v).length;\n    }\n  }, {\n    key: \"getLengthSq\",\n    value: function getLengthSq() {\n      return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n  }, {\n    key: \"distanceToSq\",\n    value: function distanceToSq(v) {\n      return this.sub(v).getLengthSq();\n    }\n  }, {\n    key: \"manhattanDistanceTo\",\n    value: function manhattanDistanceTo(v) {\n      return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return Vector.clone(this);\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(velocity) {\n      this.x = velocity.x;\n      this.y = velocity.y;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(angle) {\n      return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n  }, {\n    key: \"updateFromAngle\",\n    value: function updateFromAngle(angle, length) {\n      this.x = Math.cos(angle) * length;\n      this.y = Math.sin(angle) * length;\n    }\n  }], [{\n    key: \"clone\",\n    value: function clone(source) {\n      return Vector.create(source.x, source.y);\n    }\n  }, {\n    key: \"create\",\n    value: function create(x, y) {\n      return new Vector(x, y);\n    }\n  }, {\n    key: \"origin\",\n    get: function get() {\n      return Vector.create(0, 0);\n    }\n  }]);\n  return Vector;\n}();","map":{"version":3,"names":["Vector","x","y","defX","defY","undefined","Error","coords","Math","atan2","angle","updateFromAngle","length","sqrt","v","create","n","sub","getLengthSq","abs","clone","velocity","cos","sin","source"],"sources":["C:/Users/VICKY MISHRA/Desktop/My-Portfolio-Website/My-portfolio-website-using-React-js/myportfolio/node_modules/tsparticles/esm/Core/Utils/Vector.js"],"sourcesContent":["export class Vector {\n    constructor(x, y) {\n        let defX, defY;\n        if (y === undefined) {\n            if (typeof x === \"number\") {\n                throw new Error(\"tsParticles - Vector not initialized correctly\");\n            }\n            const coords = x;\n            [defX, defY] = [coords.x, coords.y];\n        }\n        else {\n            [defX, defY] = [x, y];\n        }\n        this.x = defX;\n        this.y = defY;\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.x ** 2 + this.y ** 2);\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    add(v) {\n        return Vector.create(this.x + v.x, this.y + v.y);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n    }\n    sub(v) {\n        return Vector.create(this.x - v.x, this.y - v.y);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n    }\n    mult(n) {\n        return Vector.create(this.x * n, this.y * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n    }\n    div(n) {\n        return Vector.create(this.x / n, this.y / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    manhattanDistanceTo(v) {\n        return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n    copy() {\n        return Vector.clone(this);\n    }\n    setTo(velocity) {\n        this.x = velocity.x;\n        this.y = velocity.y;\n    }\n    rotate(angle) {\n        return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"C:/Users/VICKY MISHRA/Desktop/My-Portfolio-Website/My-portfolio-website-using-React-js/myportfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/VICKY MISHRA/Desktop/My-Portfolio-Website/My-portfolio-website-using-React-js/myportfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/VICKY MISHRA/Desktop/My-Portfolio-Website/My-portfolio-website-using-React-js/myportfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/VICKY MISHRA/Desktop/My-Portfolio-Website/My-portfolio-website-using-React-js/myportfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particles_engine;\nimport { InteractionManager, ParticlesMover, Point, QuadTree, Rectangle } from \"./Utils\";\nimport { getRangeMax, getRangeMin, getRangeValue, randomInRange, setRangeValue } from \"../Utils\";\nimport { Particle } from \"./Particle\";\nimport { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport var Particles = /*#__PURE__*/function () {\n  function Particles(engine, container) {\n    _classCallCheck(this, Particles);\n    this.container = container;\n    _Particles_engine.set(this, void 0);\n    __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n    this.nextId = 0;\n    this.array = [];\n    this.zArray = [];\n    this.mover = new ParticlesMover(container);\n    this.limit = 0;\n    this.needsSort = false;\n    this.lastZIndex = 0;\n    this.freqs = {\n      links: new Map(),\n      triangles: new Map()\n    };\n    this.interactionManager = new InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n    var canvasSize = this.container.canvas.size;\n    this.linksColors = new Map();\n    this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n    this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n  }\n  _createClass(Particles, [{\n    key: \"count\",\n    get: function get() {\n      return this.array.length;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _a;\n      var container = this.container;\n      var options = container.actualOptions;\n      this.lastZIndex = 0;\n      this.needsSort = false;\n      this.freqs.links = new Map();\n      this.freqs.triangles = new Map();\n      var handled = false;\n      this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n      this.interactionManager.init();\n      var _iterator = _createForOfIteratorHelper(container.plugins),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            plugin = _step$value[1];\n          if (plugin.particlesInitialization !== undefined) {\n            handled = plugin.particlesInitialization();\n          }\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this.addManualParticles();\n      if (!handled) {\n        for (var group in options.particles.groups) {\n          var groupOptions = options.particles.groups[group];\n          for (var i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n            this.addParticle(undefined, groupOptions, group);\n          }\n        }\n        for (var _i = this.count; _i < options.particles.number.value; _i++) {\n          this.addParticle();\n        }\n      }\n      container.pathGenerator.init(container);\n    }\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      this.clear();\n      this.init();\n      this.draw({\n        value: 0,\n        factor: 0\n      });\n    }\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(index) {\n      var quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var group = arguments.length > 2 ? arguments[2] : undefined;\n      var override = arguments.length > 3 ? arguments[3] : undefined;\n      if (!(index >= 0 && index <= this.count)) {\n        return;\n      }\n      var deleted = 0;\n      for (var i = index; deleted < quantity && i < this.count; i++) {\n        var particle = this.array[i];\n        if (!particle || particle.group !== group) {\n          continue;\n        }\n        particle.destroy(override);\n        this.array.splice(i--, 1);\n        var zIdx = this.zArray.indexOf(particle);\n        this.zArray.splice(zIdx, 1);\n        deleted++;\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(particle, group, override) {\n      this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      var container = this.container;\n      var particlesToDelete = [];\n      container.pathGenerator.update();\n      var _iterator2 = _createForOfIteratorHelper(container.plugins),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n            plugin = _step2$value[1];\n          if (plugin.update !== undefined) {\n            plugin.update(delta);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var _iterator3 = _createForOfIteratorHelper(this.array),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _particle = _step3.value;\n          var resizeFactor = container.canvas.resizeFactor;\n          if (resizeFactor) {\n            _particle.position.x *= resizeFactor.width;\n            _particle.position.y *= resizeFactor.height;\n          }\n          _particle.bubble.inRange = false;\n          var _iterator5 = _createForOfIteratorHelper(this.container.plugins),\n            _step5;\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var _step5$value = _slicedToArray(_step5.value, 2),\n                _plugin = _step5$value[1];\n              if (_particle.destroyed) {\n                break;\n              }\n              if (_plugin.particleUpdate) {\n                _plugin.particleUpdate(_particle, delta);\n              }\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n          this.mover.move(_particle, delta);\n          if (_particle.destroyed) {\n            particlesToDelete.push(_particle);\n            continue;\n          }\n          this.quadTree.insert(new Point(_particle.getPosition(), _particle));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      for (var _i2 = 0, _particlesToDelete = particlesToDelete; _i2 < _particlesToDelete.length; _i2++) {\n        var particle = _particlesToDelete[_i2];\n        this.remove(particle);\n      }\n      this.interactionManager.externalInteract(delta);\n      var _iterator4 = _createForOfIteratorHelper(container.particles.array),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _particle2 = _step4.value;\n          var _iterator6 = _createForOfIteratorHelper(this.updaters),\n            _step6;\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var updater = _step6.value;\n              updater.update(_particle2, delta);\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n          if (!_particle2.destroyed && !_particle2.spawning) {\n            this.interactionManager.particlesInteract(_particle2, delta);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      delete container.canvas.resizeFactor;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(delta) {\n      var container = this.container;\n      container.canvas.clear();\n      var canvasSize = this.container.canvas.size;\n      this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n      this.update(delta);\n      if (this.needsSort) {\n        this.zArray.sort(function (a, b) {\n          return b.position.z - a.position.z || a.id - b.id;\n        });\n        this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n        this.needsSort = false;\n      }\n      var _iterator7 = _createForOfIteratorHelper(container.plugins),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var _step7$value = _slicedToArray(_step7.value, 2),\n            plugin = _step7$value[1];\n          container.canvas.drawPlugin(plugin, delta);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      var _iterator8 = _createForOfIteratorHelper(this.zArray),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var p = _step8.value;\n          p.draw(delta);\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.zArray = [];\n    }\n  }, {\n    key: \"push\",\n    value: function push(nb, mouse, overrideOptions, group) {\n      this.pushing = true;\n      for (var i = 0; i < nb; i++) {\n        this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n      }\n      this.pushing = false;\n    }\n  }, {\n    key: \"addParticle\",\n    value: function addParticle(position, overrideOptions, group) {\n      var container = this.container,\n        options = container.actualOptions,\n        limit = options.particles.number.limit * container.density;\n      if (limit > 0) {\n        var countToRemove = this.count + 1 - limit;\n        if (countToRemove > 0) {\n          this.removeQuantity(countToRemove);\n        }\n      }\n      return this.pushParticle(position, overrideOptions, group);\n    }\n  }, {\n    key: \"addSplitParticle\",\n    value: function addSplitParticle(parent) {\n      var splitOptions = parent.options.destroy.split,\n        options = new ParticlesOptions();\n      options.load(parent.options);\n      var factor = getRangeValue(splitOptions.factor.value);\n      options.color.load({\n        value: {\n          hsl: parent.getFillColor()\n        }\n      });\n      if (typeof options.size.value === \"number\") {\n        options.size.value /= factor;\n      } else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n      }\n      options.load(splitOptions.particles);\n      var offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0;\n      var position = {\n        x: parent.position.x + randomInRange(offset),\n        y: parent.position.y + randomInRange(offset)\n      };\n      return this.pushParticle(position, options, parent.group, function (particle) {\n        if (particle.size.value < 0.5) {\n          return false;\n        }\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = parent.splitCount + 1;\n        particle.unbreakable = true;\n        setTimeout(function () {\n          particle.unbreakable = false;\n        }, 500);\n        return true;\n      });\n    }\n  }, {\n    key: \"removeQuantity\",\n    value: function removeQuantity(quantity, group) {\n      this.removeAt(0, quantity, group);\n    }\n  }, {\n    key: \"getLinkFrequency\",\n    value: function getLinkFrequency(p1, p2) {\n      var range = setRangeValue(p1.id, p2.id),\n        key = \"\".concat(getRangeMin(range), \"_\").concat(getRangeMax(range));\n      var res = this.freqs.links.get(key);\n      if (res === undefined) {\n        res = Math.random();\n        this.freqs.links.set(key, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"getTriangleFrequency\",\n    value: function getTriangleFrequency(p1, p2, p3) {\n      var _ref = [p1.id, p2.id, p3.id],\n        id1 = _ref[0],\n        id2 = _ref[1],\n        id3 = _ref[2];\n      if (id1 > id2) {\n        var _ref2 = [id1, id2];\n        id2 = _ref2[0];\n        id1 = _ref2[1];\n      }\n      if (id2 > id3) {\n        var _ref3 = [id2, id3];\n        id3 = _ref3[0];\n        id2 = _ref3[1];\n      }\n      if (id1 > id3) {\n        var _ref4 = [id1, id3];\n        id3 = _ref4[0];\n        id1 = _ref4[1];\n      }\n      var key = \"\".concat(id1, \"_\").concat(id2, \"_\").concat(id3);\n      var res = this.freqs.triangles.get(key);\n      if (res === undefined) {\n        res = Math.random();\n        this.freqs.triangles.set(key, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"addManualParticles\",\n    value: function addManualParticles() {\n      var container = this.container,\n        options = container.actualOptions;\n      var _iterator9 = _createForOfIteratorHelper(options.manualParticles),\n        _step9;\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var particle = _step9.value;\n          var pos = particle.position ? {\n            x: particle.position.x * container.canvas.size.width / 100,\n            y: particle.position.y * container.canvas.size.height / 100\n          } : undefined;\n          this.addParticle(pos, particle.options);\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity() {\n      var options = this.container.actualOptions;\n      for (var group in options.particles.groups) {\n        this.applyDensity(options.particles.groups[group], 0, group);\n      }\n      this.applyDensity(options.particles, options.manualParticles.length);\n    }\n  }, {\n    key: \"applyDensity\",\n    value: function applyDensity(options, manualCount, group) {\n      var _a;\n      if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n        return;\n      }\n      var numberOptions = options.number;\n      var densityFactor = this.initDensityFactor(numberOptions.density);\n      var optParticlesNumber = numberOptions.value;\n      var optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n      var particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount;\n      var particlesCount = Math.min(this.count, this.array.filter(function (t) {\n        return t.group === group;\n      }).length);\n      this.limit = numberOptions.limit * densityFactor;\n      if (particlesCount < particlesNumber) {\n        this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n      } else if (particlesCount > particlesNumber) {\n        this.removeQuantity(particlesCount - particlesNumber, group);\n      }\n    }\n  }, {\n    key: \"initDensityFactor\",\n    value: function initDensityFactor(densityOptions) {\n      var container = this.container;\n      if (!container.canvas.element || !densityOptions.enable) {\n        return 1;\n      }\n      var canvas = container.canvas.element,\n        pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    }\n  }, {\n    key: \"pushParticle\",\n    value: function pushParticle(position, overrideOptions, group, initializer) {\n      try {\n        var particle = new Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n        var canAdd = true;\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n        if (!canAdd) {\n          return;\n        }\n        this.array.push(particle);\n        this.zArray.push(particle);\n        this.nextId++;\n        return particle;\n      } catch (e) {\n        console.warn(\"error adding particle: \".concat(e));\n        return;\n      }\n    }\n  }]);\n  return Particles;\n}();\n_Particles_engine = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Particles_engine","InteractionManager","ParticlesMover","Point","QuadTree","Rectangle","getRangeMax","getRangeMin","getRangeValue","randomInRange","setRangeValue","Particle","ParticlesOptions","Particles","engine","container","nextId","array","zArray","mover","limit","needsSort","lastZIndex","freqs","links","Map","triangles","interactionManager","canvasSize","canvas","size","linksColors","quadTree","width","height","updaters","plugins","getUpdaters","length","_a","options","actualOptions","handled","init","plugin","particlesInitialization","undefined","addManualParticles","group","particles","groups","groupOptions","i","count","j","number","addParticle","pathGenerator","clear","draw","factor","index","quantity","override","deleted","particle","destroy","splice","zIdx","indexOf","removeAt","delta","particlesToDelete","update","resizeFactor","position","x","y","bubble","inRange","destroyed","particleUpdate","move","push","insert","getPosition","remove","externalInteract","updater","spawning","particlesInteract","sort","a","b","z","id","drawPlugin","p","nb","mouse","overrideOptions","pushing","density","countToRemove","removeQuantity","pushParticle","parent","splitOptions","split","load","color","hsl","getFillColor","min","max","offset","sizeOffset","velocity","splitCount","unbreakable","setTimeout","p1","p2","range","key","res","Math","random","p3","id1","id2","id3","manualParticles","pos","applyDensity","manualCount","enable","numberOptions","densityFactor","initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","t","abs","densityOptions","element","pxRatio","retina","pixelRatio","area","initializer","canAdd","e","console","warn","WeakMap"],"sources":["C:/Users/VICKY MISHRA/Desktop/My-Portfolio-Website/My-portfolio-website-using-React-js/myportfolio/node_modules/tsparticles/esm/Core/Particles.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particles_engine;\nimport { InteractionManager, ParticlesMover, Point, QuadTree, Rectangle } from \"./Utils\";\nimport { getRangeMax, getRangeMin, getRangeValue, randomInRange, setRangeValue } from \"../Utils\";\nimport { Particle } from \"./Particle\";\nimport { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        _Particles_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.mover = new ParticlesMover(container);\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n        this.interactionManager = new InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n        const canvasSize = this.container.canvas.size;\n        this.linksColors = new Map();\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    init() {\n        var _a;\n        const container = this.container;\n        const options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        this.freqs.links = new Map();\n        this.freqs.triangles = new Map();\n        let handled = false;\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n        container.pathGenerator.init(container);\n    }\n    redraw() {\n        this.clear();\n        this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (!(index >= 0 && index <= this.count)) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            deleted++;\n        }\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    update(delta) {\n        const container = this.container;\n        const particlesToDelete = [];\n        container.pathGenerator.update();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.update !== undefined) {\n                plugin.update(delta);\n            }\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.bubble.inRange = false;\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            this.mover.move(particle, delta);\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        this.interactionManager.externalInteract(delta);\n        for (const particle of container.particles.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    draw(delta) {\n        const container = this.container;\n        container.canvas.clear();\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    addParticle(position, overrideOptions, group) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit * container.density;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this.pushParticle(position, overrideOptions, group);\n    }\n    addSplitParticle(parent) {\n        const splitOptions = parent.options.destroy.split, options = new ParticlesOptions();\n        options.load(parent.options);\n        const factor = getRangeValue(splitOptions.factor.value);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitOptions.particles);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0;\n        const position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.pushParticle(position, options, parent.group, (particle) => {\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = parent.splitCount + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    getLinkFrequency(p1, p2) {\n        const range = setRangeValue(p1.id, p2.id), key = `${getRangeMin(range)}_${getRangeMax(range)}`;\n        let res = this.freqs.links.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.links.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.freqs.triangles.get(key);\n        if (res === undefined) {\n            res = Math.random();\n            this.freqs.triangles.set(key, res);\n        }\n        return res;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            const pos = particle.position\n                ? {\n                    x: (particle.position.x * container.canvas.size.width) / 100,\n                    y: (particle.position.y * container.canvas.size.height) / 100,\n                }\n                : undefined;\n            this.addParticle(pos, particle.options);\n        }\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this.applyDensity(options.particles.groups[group], 0, group);\n        }\n        this.applyDensity(options.particles, options.manualParticles.length);\n    }\n    applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number;\n        const densityFactor = this.initDensityFactor(numberOptions.density);\n        const optParticlesNumber = numberOptions.value;\n        const optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n        const particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount;\n        const particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            const particle = new Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n_Particles_engine = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}